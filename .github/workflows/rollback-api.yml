name: Rollback API (symlink → previous/target release)

on:
  workflow_dispatch:
    inputs:
      target_sha:
        description: "Release SHA to roll back to (leave blank = previous good)"
        required: false

permissions:
  contents: read

concurrency:
  group: api-rollback
  cancel-in-progress: false

jobs:
  rollback:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Roll back to previous/target release on VPS (no apt, no npm)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host:     ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key:      ${{ secrets.VPS_SSH_KEY }}
          script_stop: true
          envs: GITHUB_SHA
          script: |
            set -euo pipefail
            BASE="${{ secrets.VPS_PATH }}"
            RELS="${BASE}/releases"
            CUR="${BASE}/current"
            TARGET="${{ github.event.inputs.target_sha || '' }}"

            CURRENT="$(readlink -f "$CUR" || true)"
            if [ -n "$TARGET" ] && [ -d "${RELS}/${TARGET}" ]; then
              CANDIDATE="${RELS}/${TARGET}"
            else
              CANDIDATE="$(ls -1dt "${RELS}/"* 2>/dev/null | grep -vF "$CURRENT" | sed -n '1p' || true)"
            fi

            if [ -z "${CANDIDATE:-}" ] || [ ! -d "${CANDIDATE:-/missing}" ]; then
              echo "❌ No rollback candidate found."; exit 1
            fi

            echo "↩️  Linking current → $CANDIDATE"
            ln -sfn "$CANDIDATE" "$CUR"

            cd "$CUR"
            sudo pm2 restart "${{ secrets.PM2_NAME }}" --update-env || \
            sudo pm2 start "node src/server.js" --name "${{ secrets.PM2_NAME }}"
            sudo pm2 save || true

            PORT="${PORT:-}"
            if [ -z "$PORT" ] && [ -f "${BASE}/.env" ]; then
              PORT="$(grep -E '^PORT=' "${BASE}/.env" | tail -1 | cut -d= -f2 | tr -d '\r' || true)"
            fi
            PORT="${PORT:-3000}"

            echo "→ Checking http://127.0.0.1:${PORT}/healthz (200 or 401)"
            ready=0
            for i in $(seq 1 60); do
              if command -v curl >/dev/null 2>&1; then
                code="$(curl -s -o /dev/null -w '%{http_code}' "http://127.0.0.1:${PORT}/healthz" || true)"
              else
                code="$(wget -qO- --server-response "http://127.0.0.1:${PORT}/healthz" 2>&1 | awk '/^  HTTP/{print $2; exit}' || true)"
              fi
              code=${code:-000}
              echo "healthz try #$i: HTTP $code"
              if [ "$code" = "200" ] || [ "$code" = "401" ]; then ready=1; break; fi
              sleep 1
            done
            [ "$ready" -eq 1 ] || { echo "❌ Rollback target not ready"; exit 1; }
            echo "✅ Rollback OK."

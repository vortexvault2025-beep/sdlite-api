name: Rollback API (symlink → previous/target)

on:
  workflow_dispatch:
    inputs:
      to_release:
        description: "Release SHA to roll back TO (empty = previous)"
        required: false
        default: ""

permissions:
  contents: read

concurrency:
  group: api-rollback-${{ github.ref }}
  cancel-in-progress: true

jobs:
  rollback:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Rollback on VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script_stop: true
          script: |
            set -euo pipefail
            trap 'ret=$?; echo "::error::Rollback failed on line ${LINENO} (exit=$ret)"; ss -lntp || true; pm2 ls || true; exit $ret' ERR
            set -x
            BASE="${{ secrets.VPS_PATH }}"
            RELS="${BASE}/releases"
            CUR="${BASE}/current"
            WANT="${{ github.event.inputs.to_release }}"
            test -d "$RELS"

            if [ -n "$WANT" ]; then
              TARGET="$RELS/$WANT"
              [ -d "$TARGET" ] || { echo "Release $WANT not found under $RELS"; exit 2; }
            else
              CURRENT_REAL="$(readlink -f "$CUR" || true)"
              TARGET="$(ls -1dt "${RELS}/"* 2>/dev/null | grep -v "^$CURRENT_REAL$" | head -1 || true)"
              [ -n "$TARGET" ] || { echo "No previous release to roll back to."; exit 3; }
            fi

            echo "→ Rolling back to: $TARGET"
            pm2 delete "${{ secrets.PM2_NAME }}" || true
            ln -sfn "$TARGET" "$CUR"
            cd "$CUR"
            DOTENV_CONFIG_PATH="${BASE}/.env" \
            pm2 start "src/server.js" --name "${{ secrets.PM2_NAME }}" \
              --interpreter node --interpreter-args "-r dotenv/config"
            pm2 save || true
            pm2 ls || true

            # Readiness (200/401 ok)
            PORT="${PORT:-3000}"
            echo "Polling http://127.0.0.1:${PORT}/healthz ..."
            for i in $(seq 1 60); do
              code="$(curl -s -o /dev/null -w '%{http_code}' "http://127.0.0.1:${PORT}/healthz" || true)"
              [ "$code" = "200" ] || [ "$code" = "401" ] && { echo "Ready (HTTP $code)"; exit 0; }
              sleep 1
            done
            echo "Rollback readiness failed"; exit 4
